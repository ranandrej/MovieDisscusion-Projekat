@model Common.DTOs.RegisterDTO
@{
    ViewBag.Title = "Register";
}

<h2 class="text-center mb-4">Create account</h2>

<div class="container" style="max-width: 640px;">
    @using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "card p-4 shadow-sm", enctype = "multipart/form-data" }))
    {
        @Html.ValidationSummary(true, "", new { @class = "alert alert-danger" })

        <div class="row">
            <div class="col-md-12 mb-3">
                @Html.LabelFor(m => m.FullName, new { @class = "form-label" })
                @Html.TextBoxFor(m => m.FullName, new { @class = "form-control", placeholder = "Full name" })
                @Html.ValidationMessageFor(m => m.FullName, "", new { @class = "text-danger" })
            </div>

            <div class="col-md-6 mb-3">
                @Html.LabelFor(m => m.Gender, new { @class = "form-label" })
                @Html.DropDownListFor(m => m.Gender,
                    new SelectList(new[] { "Male", "Female", "Other" }),
                    "Select gender",
                    new { @class = "form-select" })
                @Html.ValidationMessageFor(m => m.Gender, "", new { @class = "text-danger" })
            </div>

            <div class="col-md-6 mb-3">
                @Html.LabelFor(m => m.Email, new { @class = "form-label" })
                @Html.TextBoxFor(m => m.Email, new { @class = "form-control", placeholder = "email@example.com", type = "email" })
                @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
            </div>

            <div class="col-md-6 mb-3">
                @Html.LabelFor(m => m.Password, new { @class = "form-label" })
                @Html.PasswordFor(m => m.Password, new { @class = "form-control", placeholder = "Password (min 6 chars)" })
                @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
            </div>

            <div class="col-md-6 mb-3">
                @Html.LabelFor(m => m.ConfirmPassword, new { @class = "form-label" })
                @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control", placeholder = "Repeat password" })
                @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger" })
            </div>

            <div class="col-md-4 mb-3">
                @Html.LabelFor(m => m.Country, new { @class = "form-label" })
                @Html.TextBoxFor(m => m.Country, new { @class = "form-control", placeholder = "Country" })
                @Html.ValidationMessageFor(m => m.Country, "", new { @class = "text-danger" })
            </div>

            <div class="col-md-4 mb-3">
                @Html.LabelFor(m => m.City, new { @class = "form-label" })
                @Html.TextBoxFor(m => m.City, new { @class = "form-control", placeholder = "City" })
                @Html.ValidationMessageFor(m => m.City, "", new { @class = "text-danger" })
            </div>

            <div class="col-md-4 mb-3">
                @Html.LabelFor(m => m.Address, new { @class = "form-label" })
                @Html.TextBoxFor(m => m.Address, new { @class = "form-control", placeholder = "Address" })
                @Html.ValidationMessageFor(m => m.Address, "", new { @class = "text-danger" })
            </div>

          

            <!-- (Novo) Upload fajla - za preview sada, upload kasnije kad dodaš parametar u akciji -->
            <div class="col-md-12 mb-3">
                <label for="PhotoFile" class="form-label">Upload profile photo (optional)</label>
                <input type="file" id="PhotoFile" name="PhotoFile" class="form-control" accept="image/*" />
                <small class="text-muted">JPEG, PNG, GIF, WEBP</small>
            </div>

            <!-- (Novo) Preview sekcija -->
            <div class="col-md-12 mb-3">
                <label class="form-label">Preview</label>
                <div class="border rounded p-3 text-center">
                    <img id="photoPreview"
                         src="@(string.IsNullOrWhiteSpace(Model?.PhotoUrl) ? "" : Model.PhotoUrl)"
                         alt="Profile photo preview"
                         style="max-width:220px; height:auto; @(string.IsNullOrWhiteSpace(Model?.PhotoUrl) ? "display:none;" : "display:inline-block;")" />
                    <div id="photoPlaceholder" class="text-muted" style="@(string.IsNullOrWhiteSpace(Model?.PhotoUrl) ? "" : "display:none;")">
                        No photo selected
                    </div>
                </div>
            </div>
        </div>

        <button type="submit" class="btn btn-success w-100">Create account</button>

        <div class="mt-3 text-center">
            <span>Already have an account?</span>
            <a href="@Url.Action("Login", "Account")">Login here</a>
        </div>
    }
</div>

@section scripts{
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        (function () {
            var urlInput = document.getElementById('PhotoUrl');
            var fileInput = document.getElementById('PhotoFile');
            var preview = document.getElementById('photoPreview');
            var placeholder = document.getElementById('photoPlaceholder');

            function showPreview(src) {
                if (src) {
                    preview.src = src;
                    preview.style.display = 'inline-block';
                    placeholder.style.display = 'none';
                } else {
                    preview.removeAttribute('src');
                    preview.style.display = 'none';
                    placeholder.style.display = '';
                }
            }

            // Preview kad se unosi URL
            if (urlInput) {
                urlInput.addEventListener('input', function (e) {
                    var v = e.target.value.trim();
                    if (v.startsWith('http://') || v.startsWith('https://')) {
                        showPreview(v);
                    } else if (v.length === 0) {
                        showPreview('');
                    }
                });
            }

            // Preview kad se izabere fajl
            if (fileInput) {
                fileInput.addEventListener('change', function (e) {
                    var file = e.target.files && e.target.files[0];
                    if (!file) { showPreview(''); return; }
                    var objectUrl = URL.createObjectURL(file);
                    showPreview(objectUrl);
                });
            }
        })();
    </script>
}
