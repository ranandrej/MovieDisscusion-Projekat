@model IEnumerable<Common.DiscussionEntity>
@{
    ViewBag.Title = "Discover Movies";
    var currentUserEmail = Session["email"]?.ToString()?.ToLowerInvariant();
}

<!-- Hero Section -->
<section class="cinema-hero">
    <div class="hero-content">
        <h1 class="hero-title">Discover Cinema</h1>
        <p class="hero-subtitle">Explore, discuss, and rate the greatest films ever made</p>
    </div>
</section>

<!-- Search & Filter Section -->
<section class="cinema-search">
    @using (Html.BeginForm("Index", "Discussion", FormMethod.Get, new { id = "searchForm" }))
    {
        <div class="search-grid">
            <div class="search-group">
                <label for="TitleContains" class="search-label">Movie Title</label>
                <input type="text" name="TitleContains" value="@Request["TitleContains"]" id="TitleContains" class="search-input" placeholder="Enter movie title..." />
            </div>

            <div class="search-group">
                <label for="GenreEquals" class="search-label">Genre</label>
                <input type="text" name="GenreEquals" value="@Request["GenreEquals"]" id="GenreEquals" class="search-input" placeholder="Action, Drama, Comedy..." />
            </div>

            <div class="search-group">
                <label for="SortBy" class="search-label">Sort By</label>
                <select name="SortBy" id="sortBy" class="search-select">
                    <option value="None" @(Request["SortBy"] == "None" ? "selected" : "")>Latest</option>
                    <option value="ScoreDesc" @(Request["SortBy"] == "ScoreDesc" ? "selected" : "")>Highest Rated</option>
                    <option value="ScoreAsc" @(Request["SortBy"] == "ScoreAsc" ? "selected" : "")>Lowest Rated</option>
                </select>
            </div>

            <div class="search-group">
                <button type="submit" class="search-btn" onclick="clearInputs()">
                    <i class="fas fa-search"></i>
                    Search
                </button>
            </div>
        </div>
    }
</section>

<!-- Create Discussion Button -->
<div style="text-align: center; margin: 30px 0;">
    <a href="@Url.Action("Create", "Discussion")" class="create-btn">
        <i class="fas fa-plus-circle"></i>
        Create New Discussion
    </a>
</div>

<!-- Movies Grid -->
<section class="movie-grid">
    @foreach (var d in ViewBag.Discussions)
    {
        <article class="movie-card">
            <!-- Movie Poster -->
            <div class="movie-poster">
                <img src="@d.PosterUrl" alt="Poster for @d.MovieTitle" class="poster-img" />
                <div class="movie-rating">@d.ImdbRating</div>
                <div class="movie-genre">@d.Genre</div>
            </div>

            <!-- Movie Content -->
            <div class="movie-content">
                <h3 class="movie-title">@d.MovieTitle</h3>
                <div class="movie-year">(@d.Year)</div>

                <div class="movie-meta">
                    <div class="meta-item">
                        <span class="meta-label">Duration:</span> @d.DurationMin min
                    </div>
                    <div class="meta-item">
                        <span class="meta-label">Comments:</span> @ViewBag.CommentCount[d.RowKey]
                    </div>
                    <div class="meta-item">
                        <span class="meta-label">Followers:</span> @ViewBag.FollowerCountMap[d.RowKey]
                    </div>
                </div>

                <div class="movie-synopsis">@d.Synopsis</div>

                <!-- Reactions -->
                <div class="movie-reactions">
                    <div class="reaction-count">
                        <div class="reaction-item">
                            <i class="fas fa-thumbs-up" style="color: var(--accent-blue);"></i>
                            <span>@d.Positive</span>
                        </div>
                        <div class="reaction-item">
                            <i class="fas fa-thumbs-down" style="color: var(--accent-red);"></i>
                            <span>@d.Negative</span>
                        </div>
                    </div>

                    @if (!ViewBag.IsCreatorMap[d.RowKey])
                    {
                        <div class="reaction-buttons">
                            <form method="post" action="@Url.Action("RateFilm", "Discussion", new { id = d.RowKey, isLike = true, Page = ViewBag.CurrentPage, PageSize = ViewBag.PageSize, TitleContains = Request["TitleContains"], GenreEquals = Request["GenreEquals"], SortBy = Request["SortBy"] })" style="display: inline;">
                                <button type="submit" class="reaction-btn like">
                                    <i class="fas fa-thumbs-up"></i>
                                </button>
                            </form>
                            <form method="post" action="@Url.Action("RateFilm", "Discussion", new { id = d.RowKey, isLike = false, Page = ViewBag.CurrentPage, PageSize = ViewBag.PageSize, TitleContains = Request["TitleContains"], GenreEquals = Request["GenreEquals"], SortBy = Request["SortBy"] })" style="display: inline;">
                                <button type="submit" class="reaction-btn dislike">
                                    <i class="fas fa-thumbs-down"></i>
                                </button>
                            </form>
                        </div>
                    }
                </div>

                <!-- Action Buttons -->
                <div class="movie-actions">
                    <a href="@Url.Action("Details", "Discussion", new { id = d.RowKey })" class="action-btn btn-comment">
                        <i class="fas fa-comment"></i>
                        Discuss
                    </a>

                    @if (d.CreatorEmail?.ToLowerInvariant() == currentUserEmail)
                    {
                        <a href="@Url.Action("Edit", "Discussion", new { id = d.RowKey })" class="action-btn btn-edit">
                            <i class="fas fa-edit"></i>
                            Edit
                        </a>
                        <a href="@Url.Action("Delete", "Discussion", new { id = d.RowKey })" class="action-btn btn-delete">
                            <i class="fas fa-trash"></i>
                            Delete
                        </a>
                    }

                    @if (ViewBag.IsFollowingMap[d.RowKey])
                    {
                        <form method="post" action="@Url.Action("Unfollow", "Discussion", new { id = d.RowKey, Page = ViewBag.CurrentPage, PageSize = ViewBag.PageSize, TitleContains = Request["TitleContains"], GenreEquals = Request["GenreEquals"], SortBy = Request["SortBy"] })" style="display: inline;">
                            <button type="submit" class="action-btn btn-unfollow">
                                <i class="fas fa-eye-slash"></i>
                                Unfollow
                            </button>
                        </form>
                    }
                    else
                    {
                        <form method="post" action="@Url.Action("Follow", "Discussion", new { id = d.RowKey, Page = ViewBag.CurrentPage, PageSize = ViewBag.PageSize, TitleContains = Request["TitleContains"], GenreEquals = Request["GenreEquals"], SortBy = Request["SortBy"] })" style="display: inline;">
                            <button type="submit" class="action-btn btn-follow">
                                <i class="fas fa-eye"></i>
                                Follow
                            </button>
                        </form>
                    }
                </div>
            </div>

            <!-- Movie Footer -->
            <div class="movie-footer">
                <div class="creator-info">
                    <span>
                        <i class="fas fa-user"></i>
                        <span class="creator-name">@d.CreatorEmail</span>
                    </span>
                    <span>@d.CreatedUtc.ToLocalTime().ToString("MMM dd, yyyy")</span>
                </div>
            </div>
        </article>
    }
</section>

<!-- Pagination -->
<nav class="pagination">
    @if (ViewBag.CurrentPage > 1)
    {
        <a href="?Page=1&PageSize=@ViewBag.PageSize&TitleContains=@Request["TitleContains"]&GenreEquals=@Request["GenreEquals"]&SortBy=@Request["SortBy"]" class="page-btn">
            <i class="fas fa-angle-double-left"></i>
            First
        </a>
        <a href="?Page=@(ViewBag.CurrentPage - 1)&PageSize=@ViewBag.PageSize&TitleContains=@Request["TitleContains"]&GenreEquals=@Request["GenreEquals"]&SortBy=@Request["SortBy"]" class="page-btn">
            <i class="fas fa-angle-left"></i>
            Previous
        </a>
    }

    <span class="page-info">Page @ViewBag.CurrentPage of @ViewBag.TotalPages</span>

    @if (ViewBag.CurrentPage < ViewBag.TotalPages)
    {
        <a href="?Page=@(ViewBag.CurrentPage + 1)&PageSize=@ViewBag.PageSize&TitleContains=@Request["TitleContains"]&GenreEquals=@Request["GenreEquals"]&SortBy=@Request["SortBy"]" class="page-btn">
            Next
            <i class="fas fa-angle-right"></i>
        </a>
        <a href="?Page=@ViewBag.TotalPages&PageSize=@ViewBag.PageSize&TitleContains=@Request["TitleContains"]&GenreEquals=@Request["GenreEquals"]&SortBy=@Request["SortBy"]" class="page-btn">
            Last
            <i class="fas fa-angle-double-right"></i>
        </a>
    }
</nav>

<script>
    function toggleCommentForm(id) {
        const form = document.getElementById('comment-form-' + id);
        if (form) {
            form.style.display = form.style.display === 'none' ? 'block' : 'none';
        }
    }
</script>

<style>
    /* Hero Section */
    .cinema-hero {
        background: linear-gradient(135deg, var(--primary-bg) 0%, var(--secondary-bg) 100%);
        padding: 60px 0;
        text-align: center;
        position: relative;
        overflow: hidden;
    }

    .cinema-hero::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><defs><pattern id="film" x="0" y="0" width="20" height="20" patternUnits="userSpaceOnUse"><rect width="20" height="20" fill="none"/><circle cx="5" cy="5" r="2" fill="rgba(245,200,66,0.1)"/><circle cx="15" cy="15" r="2" fill="rgba(245,200,66,0.1)"/></pattern></defs><rect width="100" height="100" fill="url(%23film)"/></svg>') center/200px;
        opacity: 0.3;
        z-index: 0;
    }

    .hero-content {
        position: relative;
        z-index: 1;
    }

    .hero-title {
        font-size: 4rem;
        margin-bottom: 20px;
        background: var(--gradient-accent);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
    }

    .hero-subtitle {
        font-size: 1.2rem;
        color: var(--text-secondary);
        margin-bottom: 40px;
    }

    /* Search Section */
    .cinema-search {
        background: var(--secondary-bg);
        border-radius: 20px;
        padding: 30px;
        margin: 40px 0;
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.5);
        border: 1px solid var(--border-color);
    }

    .search-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
        gap: 20px;
        align-items: end;
    }

    .search-group {
        display: flex;
        flex-direction: column;
    }

    .search-label {
        color: var(--accent-gold);
        font-weight: 600;
        margin-bottom: 8px;
        font-family: 'Orbitron', monospace;
        text-transform: uppercase;
        letter-spacing: 1px;
        font-size: 0.8rem;
    }

    .search-input {
        background: var(--tertiary-bg);
        border: 2px solid var(--border-color);
        border-radius: 15px;
        padding: 15px 20px;
        color: var(--text-primary);
        font-size: 1rem;
        transition: all 0.3s ease;
    }

    .search-input:focus {
        border-color: var(--accent-gold);
        box-shadow: 0 0 0 3px rgba(245, 200, 66, 0.2);
        background: var(--secondary-bg);
    }

    .search-select {
        background: var(--tertiary-bg);
        border: 2px solid var(--border-color);
        border-radius: 15px;
        padding: 15px 20px;
        color: var(--text-primary);
        font-size: 1rem;
        cursor: pointer;
    }

    .search-btn {
        background: var(--gradient-accent);
        border: none;
        border-radius: 15px;
        padding: 15px 30px;
        color: var(--text-primary);
        font-weight: 600;
        font-family: 'Orbitron', monospace;
        text-transform: uppercase;
        letter-spacing: 1px;
        cursor: pointer;
        transition: all 0.3s ease;
        position: relative;
        overflow: hidden;
    }

    .search-btn:hover {
        transform: translateY(-2px);
        box-shadow: 0 8px 25px rgba(245, 200, 66, 0.4);
    }

    .create-btn {
        background: var(--gradient-accent);
        padding: 15px 30px;
        border-radius: 25px;
        text-decoration: none;
        color: var(--text-primary);
        font-weight: 600;
        font-family: 'Orbitron', monospace;
        text-transform: uppercase;
        letter-spacing: 1px;
        display: inline-flex;
        align-items: center;
        gap: 10px;
        transition: all 0.3s ease;
        box-shadow: 0 4px 15px rgba(245, 200, 66, 0.3);
    }

    .create-btn:hover {
        transform: translateY(-2px);
        box-shadow: 0 8px 25px rgba(245, 200, 66, 0.4);
        color: var(--text-primary);
        text-decoration: none;
    }

    /* Movie Grid */
    .movie-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
        gap: 30px;
        margin: 40px 0;
    }

    .movie-card {
        background: var(--secondary-bg);
        border-radius: 20px;
        overflow: hidden;
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.5);
        border: 1px solid var(--border-color);
        transition: all 0.3s ease;
        position: relative;
    }

    .movie-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 20px 40px rgba(0, 0, 0, 0.7);
        border-color: var(--accent-gold);
    }

    .movie-poster {
        position: relative;
        overflow: hidden;
        height: 300px;
    }

    .poster-img {
        width: 100%;
        height: 100%;
        object-fit: cover;
        transition: transform 0.3s ease;
    }

    .movie-card:hover .poster-img {
        transform: scale(1.05);
    }

    .movie-overlay {
        position: absolute;
        bottom: 0;
        left: 0;
        right: 0;
        background: linear-gradient(transparent, rgba(0, 0, 0, 0.8));
        padding: 20px;
        color: white;
    }

    .movie-rating {
        position: absolute;
        top: 15px;
        right: 15px;
        background: var(--gradient-accent);
        color: var(--text-primary);
        padding: 8px 12px;
        border-radius: 15px;
        font-weight: 700;
        font-size: 0.9rem;
    }

    .movie-genre {
        position: absolute;
        top: 15px;
        left: 15px;
        background: rgba(0, 0, 0, 0.7);
        color: var(--accent-gold);
        padding: 6px 12px;
        border-radius: 12px;
        font-size: 0.8rem;
        font-weight: 600;
    }

    .movie-content {
        padding: 25px;
    }

    .movie-title {
        font-size: 1.4rem;
        font-weight: 700;
        margin-bottom: 10px;
        color: var(--text-primary);
        font-family: 'Orbitron', monospace;
    }

    .movie-year {
        color: var(--accent-gold);
        font-weight: 600;
        margin-bottom: 15px;
    }

    .movie-meta {
        display: grid;
        grid-template-columns: repeat(2, 1fr);
        gap: 10px;
        margin-bottom: 15px;
        font-size: 0.9rem;
    }

    .meta-item {
        color: var(--text-secondary);
    }

    .meta-label {
        color: var(--accent-gold);
        font-weight: 600;
    }

    .movie-synopsis {
        color: var(--text-secondary);
        line-height: 1.6;
        margin-bottom: 20px;
        font-size: 0.9rem;
    }

    .movie-reactions {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 20px;
        padding: 15px;
        background: var(--tertiary-bg);
        border-radius: 15px;
    }

    .reaction-count {
        display: flex;
        gap: 15px;
        align-items: center;
    }

    .reaction-item {
        display: flex;
        align-items: center;
        gap: 5px;
        color: var(--text-secondary);
        font-weight: 600;
    }

    .reaction-buttons {
        display: flex;
        gap: 10px;
    }

    .reaction-btn {
        padding: 8px 15px;
        border: 2px solid var(--border-color);
        border-radius: 12px;
        background: transparent;
        color: var(--text-secondary);
        cursor: pointer;
        transition: all 0.3s ease;
        font-weight: 600;
    }

    .reaction-btn.like:hover {
        border-color: var(--accent-blue);
        color: var(--accent-blue);
        background: rgba(0, 212, 255, 0.1);
    }

    .reaction-btn.dislike:hover {
        border-color: var(--accent-red);
        color: var(--accent-red);
        background: rgba(229, 9, 20, 0.1);
    }

    .movie-actions {
        display: flex;
        gap: 10px;
        flex-wrap: wrap;
        align-items: center;
    }

    .action-btn {
        padding: 10px 20px;
        border-radius: 20px;
        text-decoration: none;
        font-weight: 600;
        font-size: 0.85rem;
        transition: all 0.3s ease;
        border: 2px solid transparent;
        display: inline-flex;
        align-items: center;
        gap: 6px;
    }

    .btn-comment {
        background: var(--tertiary-bg);
        color: var(--text-secondary);
        border-color: var(--border-color);
    }

    .btn-comment:hover {
        background: var(--accent-blue);
        color: var(--text-primary);
        border-color: var(--accent-blue);
        text-decoration: none;
    }

    .btn-edit {
        background: var(--accent-gold);
        color: var(--primary-bg);
    }

    .btn-edit:hover {
        background: transparent;
        color: var(--accent-gold);
        border-color: var(--accent-gold);
        text-decoration: none;
    }

    .btn-delete {
        background: var(--accent-red);
        color: var(--text-primary);
    }

    .btn-delete:hover {
        background: transparent;
        color: var(--accent-red);
        border-color: var(--accent-red);
        text-decoration: none;
    }

    .btn-follow {
        background: var(--accent-blue);
        color: var(--text-primary);
    }

    .btn-unfollow {
        background: var(--accent-red);
        color: var(--text-primary);
    }

    .movie-footer {
        padding: 20px 25px;
        background: var(--tertiary-bg);
        border-top: 1px solid var(--border-color);
        font-size: 0.8rem;
        color: var(--text-muted);
    }

    .creator-info {
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .creator-name {
        color: var(--accent-gold);
        font-weight: 600;
    }

    /* Pagination */
    .pagination {
        display: flex;
        justify-content: center;
        align-items: center;
        gap: 15px;
        margin: 40px 0;
        padding: 20px;
    }

    .page-btn {
        padding: 12px 20px;
        background: var(--tertiary-bg);
        color: var(--text-secondary);
        text-decoration: none;
        border-radius: 15px;
        border: 2px solid var(--border-color);
        font-weight: 600;
        transition: all 0.3s ease;
    }

    .page-btn:hover {
        background: var(--accent-gold);
        color: var(--primary-bg);
        border-color: var(--accent-gold);
        text-decoration: none;
    }

    .page-info {
        color: var(--text-secondary);
        font-weight: 600;
    }

    /* Responsive Design */
    @@media (max-width: 768px) {
        .hero-title {
            font-size: 2.5rem;
        }

        .search-grid {
            grid-template-columns: 1fr;
        }

        .movie-grid {
            grid-template-columns: 1fr;
        }

        .movie-meta {
            grid-template-columns: 1fr;
        }

        .movie-actions {
            flex-direction: column;
            align-items: stretch;
        }
    }
</style>
